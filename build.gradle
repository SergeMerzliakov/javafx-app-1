plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.61"
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

def KOTLIN_VERSION = "1.3.61"
def JAVA_HOME = System.properties['java.home']

// BEGIN YOUR SETUP  - set location of JFX 13 (or older version)
def JFX_VERSION = "13"
def JFX_INSTALL = '/Library/Java/javafx/13.0'
// END YOUR SETUP

group 'org.epistatic'
version '2.2.1'

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs "${JFX_INSTALL}/lib"
    }
}

apply plugin: 'application'
mainClassName = 'org.epistatic.app1.Main'

javafx {
    version = JFX_VERSION
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "com.google.guava:guava:27.1-jre"

    testCompile "org.jetbrains.kotlin:kotlin-reflect:$KOTLIN_VERSION"
    testCompile "org.assertj:assertj-core:3.11.1"
    testCompile "org.testfx:testfx-core:4.0.16-alpha"
    testCompile "org.testfx:testfx-junit:4.0.16-alpha"
    testCompile "org.testfx:openjfx-monocle:jdk-12.0.1+2"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

// tests run in headless mode by default, to watch tests pass in -DshowTests=true on command line
test {
    if (System.getProperty('showTests') != null)
        systemProperty 'headless', false
    else
        systemProperty 'headless', true
}

task runApp1(type: JavaExec) {
    run {
        mainClassName = 'org.epistatic.app1.Main'
    }
    dependsOn 'run'
}

task runApp2(type: JavaExec) {
    run {
        mainClassName = 'org.epistatic.app2.Main'
    }
    dependsOn 'run'
}

task runApp3(type: JavaExec) {
    run {
        mainClassName = 'org.epistatic.app3.Main'
    }
    dependsOn 'run'
}

task runApp4(type: JavaExec) {
    run {
        mainClassName = 'org.epistatic.app4.Main'
    }
    dependsOn 'run'
}

task runApp5(type: JavaExec) {
    run {
        mainClassName = 'org.epistatic.app5.Main'
    }
    dependsOn 'run'
}

task runApp6(type: JavaExec) {
    run {
        mainClassName = 'org.epistatic.app6.Main'
    }
    dependsOn 'run'
}

task runApp7(type: JavaExec) {
    run {
        mainClassName = 'org.epistatic.app7.Main'
    }
    dependsOn 'run'
}


task collateInstall(type:Copy){
    delete "installBuild"
    mkdir "installBuild/lib"
    copy {
        from configurations.compile
        into "installBuild/lib"
    }
    copy {
        from "build/libs"
        into "installBuild"
    }
}

task listModules(type: Exec) {
    workingDir '.'
    commandLine "${JAVA_HOME}/bin/jdeps", '-s', '--module-path', "${JFX_INSTALL}/lib", '--class-path', 'installBuild/lib/*', "installBuild/${jar.baseName}-${version}.jar"
}

// Used to create installers only
task libs(type: Sync) {
    from configurations.runtime
    into "$buildDir/deplibs"
}

task buildRuntime(type: Exec) {
    delete("installBuild/jre")
    def DEP_LIST = file('dependencies.txt').text
    workingDir 'installBuild'
    commandLine "${JAVA_HOME}/bin/jlink", '--module-path', "${JFX_INSTALL}/jmods", '--strip-debug', '--no-header-files', '--no-man-pages', '--compress=2', '--add-modules', DEP_LIST, '--output', 'jre'
}
